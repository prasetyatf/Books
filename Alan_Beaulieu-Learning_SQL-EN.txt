why learn sql? writing applications, performing administrative tasks, or generating reports
why use this book to do it? the book says that this is the only book that provides detailed coverage of the SQL language without the added-
benefit of doubling as a “door stop”.
SQL schema statements = Statements used to create database objects (tables, indexes, constraints, etc.).(usually for administrator)
SQL data statements = The statements used to create, manipulate, and retrieve the data stored in a database.(usually for programmer or reporter).
SQL transaction statements(covered in chap. 12)

Chapt. 1. Alittle Background
why database is better than phone book.
nonrelational database
before relational db, computerized dbs using various ways to store data like tree structure(hierarchial database system), network database system.
In 1970, data be represented as sets of tables. Rather than using pointers to navigate between related entities, 
-redundant data is used to link records in different tables. said IBM papper.
The number of rows that a table may contain is more a matter of physical limits(disk drive).
Primary Key = One or more columns that can be used as a unique identifier for each row in a table.
primary key columns should never be allowed to change once a value has been assigned.
Compound key = a Primary Key consisting of two or more columns.
Foreign key = One or more columns that can be used together to identify a single row in another table.
what is SQL? DSL/Alpha -> SQUARE -> SEQUEL -> SQL
SQL:2006, focuses on the integration of SQL and XML and defines a language called XQuery which is used to query data in XML documents.
SQL is not an acronym for anything (actually it's not “Structured Query Language”). but it's okay what people say.
Procedural language(Python, Java, etc) defines both the desired results and the mechanism, or process, by which the results are generated.
Nonprocedural languages(SQL) define the desired results, but the process by which the results are generated is left to a component of your database engine known as the optimizer.
The optimizer’s job is to look at your SQL statements, taking into account how your tables are configured and what indexes are available, then decide execution path.
Most database engine has optimizer hints(we can influence the optimizer’s decisions), but rarely used by most SQL user.
SQL can combine to procedural language using API/toolkit.
Almost every query use 3 clauses:(be careful, if you are'nt put WHERE when delete row. you'll be delete the entire rows! :D)
SELECT /*one or more things(/INSERT/DELETE/UPDATE)*/
FROM /*one or more places*/
WHERE /*one or more conditions to apply(filter)*/
Ceate, Read, Update, Delete = INSERT, SELECT, UPDATE, DELETE
All these database servers do approximately the same thing, although some are better equipped to run very large or very-high-throughput databases. 
-Others are better at handling objects or very large files or XML documents, and so on.

Chapter 2
cmd> mysql -u root -p (execute mysql with enter uname and pwd)
create user lrngsql with pwd xyz, and create database named bank
import schema statement from external source. cmd> source "C:/LearninSQL.sql";
mysql can perform single clause: cmd> SELECT now(); but other dbms might at least 2 clauses-
(oracle database): SELECT now() FROM dual;
this book will use character(char/varchar), numeric, and date datatype.
char: fixed-length strings are right-padded with spaces and always consume-
the same number of bytes, max length 255 bytes, use the it when all strings to be stored in the column are of the same length(such as state abbreviations).

text data
varchar: not right-padded with spaces and don’t always consume the same number of bytes,
varchar columns can be up to 65,535 bytes, use it when char in the column are varying lenghts.
Both char and varchar are used in a similar fashion in all the major database servers.
some char have single byte needed to store each char(i.e Latin alphabet), some char have multy byte(i.e. Korea, Japan).

mysql> SHOW CHARACTER SET;
+---------+-------------+-------------------+--------+
| Charset | Description | Default collation | Maxlen |
+------+--------------------------+-----------------+---+
| big5 | Big5 Traditional Chinese | big5_chinese_ci | 2 |
| dec8 | DEC West European | dec8_swedish_ci | 1 |
| cp850 | DOS West European | cp850_general_ci | 1 |
...
if Maxlen > 1, then the charset is multy byte.

MySQL text types
Text type | Maximum number of bytes
Tinytext | 255
Text | 65,535
Mediumtext | 16,777,215
Longtext | 4,294,967,295

When choosing to use one of the text types, you should be aware of the following:
• If the data being loaded into a text column exceeds the maximum size for that type,
the data will be truncated.
• Trailing spaces will not be removed when data is loaded into the column.
• When using text columns for sorting or grouping, only the first 1,024 bytes are
used, although this limit may be increased if necessary.
• The different text types are unique to MySQL. SQL Server has a single text type
for large character data, whereas DB2 and Oracle use a data type called clob, for
Character Large Object.
• Now that MySQL allows up to 65,535 bytes for varchar columns (it was limited
to 255 bytes in version 4), there isn’t any particular need to use the tinytext or text type

Numeric data
Numeric are used for:
Boolean(1: True, 0:False)
Primary key(generally starts at 1 and increase in increment)
Customer shopping basket(positive numbers)
High-precision scientific or manufacturing data(comonly requires high accuracy to eight decimal points)

MySQL integer types
Type | Signed range | Unsigned range
Tinyint | −128 to 127 | 0 to 255
Smallint | −32,768 to 32,767 | 0 to 65,535
Mediumint | −8,388,608 to 8,388,607 | 0 to 16,777,215
Int | −2,147,483,648 to 2,147,483,647 | 0 to 4,294,967,295
Bigint | −9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 | 0 to 18,446,744,073,709,551,615
